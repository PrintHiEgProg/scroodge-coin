{"ast":null,"code":"var _jsxFileName = \"/Users/egorkobzev/scroodge coin/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./NavBar/NavBar.js\";\nimport Boost from \"./Boost.js\";\nimport Main from \"./Main.js\";\nimport Task from \"./Task.js\";\nimport Monopoly from \"./Monopoly.js\";\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const tg = window.Telegram.WebApp;\n  const userId = tg.initDataUnsafe.user.id;\n  const [count, setCount] = useState(0);\n  const [countBonus, setCountBonus] = useState(1);\n  const [countTrueMax, setcountTrueMax] = useState(1000);\n  const [countTrueBonus, setCountTrueBonus] = useState(1);\n  const [levelMoreClicks, setLevelMoreClicks] = useState(0);\n  const [levelMoreEnergy, setLevelMoreEnergy] = useState(0);\n  const [levelTgChannel1, setLevelTgChannel1] = useState(0);\n  const [levelTgPremium, setlevelTgPremium] = useState(0);\n  const [levelMoreCountTrueBonus, setLevelMoreCountTrueBonus] = useState(0);\n  const [levelFactoryShoes, setLevelFactoryShoes] = useState(0);\n  const [levelFactoryHotel, setLevelFactoryHotel] = useState(0);\n  const [levelFactoryBank, setLevelFactoryBank] = useState(0);\n  const [levelJoinGame, setLevelJoinGame] = useState(0);\n  const [countTrue, setCountTrue] = useState(1000);\n  const [canClick, setCanClick] = useState(true);\n  const [priceMoreClicks, setPriceMoreClicks] = useState(1000);\n  const [priceMoreEnergy, setPriceMoreEnergy] = useState(2000);\n  const [priceMoreCountTrueBonus, setPriceMoreCountTrueBonus] = useState(3000);\n  const [priceFactoryShoes, setPriceFactoryShoes] = useState(5000);\n  const [priceFactoryHotel, setPriceFactoryHotel] = useState(10000);\n  const [priceFactoryBank, setPriceFactoryBank] = useState(100000);\n  const [factoryBonus, setFactoryBonus] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (countTrue < countTrueMax) {\n        setCountTrue(prevCount => prevCount + countTrueBonus);\n      }\n    }, 3000);\n    return () => clearInterval(interval);\n  }, [countTrue]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (factoryBonus > 0) {\n        setCount(prevCount => prevCount + factoryBonus);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [count]);\n  const handleClick = () => {\n    if (canClick) {\n      setCount(count + countBonus);\n      if (true) {\n        const hapticFeedbackLight = tg.HapticFeedback.impactOccurred(\"light\");\n      }\n      if (countTrue > 0) {\n        setCountTrue(Math.max(countTrue - 1, 0));\n      }\n      setCanClick(false);\n      setTimeout(() => {\n        setCanClick(true);\n      }, 1);\n    }\n  };\n  useEffect(() => {\n    const handleOnline = () => {\n      console.log(\"Connected to the internet\");\n    };\n    const handleOffline = () => {\n      alert(\"No connection network\");\n      window.location.reload();\n    };\n\n    // Добавляем обработчики событий\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    // Проверка начального состояния\n    while (!navigator.onLine) {\n      alert(\"No connection network\");\n      window.location.reload();\n    }\n\n    // Убираем обработчики событий при размонтировании компонента\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n  useEffect(() => {\n    if (countTrue === 0) {\n      const HapticFeedbackError = tg.HapticFeedback.notificationOccurred(\"warning\");\n      alert(\"Scrooge is tired... 😴\");\n    }\n  }, [countTrue]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Имитация загрузки данных (можете заменить этот setTimeout на реальную логику загрузки)\n    setTimeout(() => {\n      setLoading(false); // После завершения загрузки устанавливаем loading в false\n    }, 3000); // Пример: имитация загрузки в течение 3 секунд\n\n    // Здесь можно добавить логику для загрузки данных с сервера или другие операции\n  }, []);\n\n  //Boosts\n\n  const moreClicks = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelMoreClicks === 10) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (window.confirm(\"Here you can buy more clicks in one click 🤑.\\nBuy it?\")) {\n        if (count >= priceMoreClicks) {\n          setCount(count - priceMoreClicks);\n          setCountBonus(countBonus + 1);\n          setLevelMoreClicks(levelMoreClicks + 1);\n          setPriceMoreClicks(priceMoreClicks + 1000);\n          alert(\"Thanks for the purchase ✅\");\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n  const moreEnergy = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelMoreEnergy === 7) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (window.confirm(\"Here you can buy more energy.\\nBuy it?\")) {\n        if (count >= priceMoreEnergy) {\n          setCount(count - priceMoreEnergy);\n          setCountTrue(countTrue + 1000);\n          setcountTrueMax(countTrueMax + 1000);\n          setLevelMoreEnergy(levelMoreEnergy + 1);\n          setPriceMoreEnergy(priceMoreEnergy + 1000);\n          alert(\"Thanks for the purchase ✅\");\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n  const MoreCountTrueBonus = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelMoreCountTrueBonus === 10) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (window.confirm(\"Here you can buy more energy to be charged.\\nBuy it?\")) {\n        if (count >= priceMoreCountTrueBonus) {\n          setCount(count - priceMoreCountTrueBonus);\n          setCountTrueBonus(countTrueBonus + 1);\n          setLevelMoreCountTrueBonus(levelMoreCountTrueBonus + 1);\n          setPriceMoreCountTrueBonus(priceMoreCountTrueBonus + 2000);\n          alert(\"Thanks for the purchase ✅\");\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n  const FactoryShoes = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelFactoryShoes === 5) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (window.confirm(\"By buying a shoe factory, you will receive +1 coins every 10 seconds.\\nBuy it?\")) {\n        if (count >= priceFactoryShoes) {\n          setCount(count - priceFactoryShoes);\n          setLevelFactoryShoes(levelFactoryShoes + 1);\n          setFactoryBonus(factoryBonus + 1);\n          setPriceFactoryShoes(priceFactoryShoes + 1000);\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n  const FactoryHotel = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelFactoryHotel === 5) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (window.confirm(\"By buying a shoe factory, you will receive +2 coins every 1 seconds.\\nBuy it?\")) {\n        if (count >= priceFactoryHotel) {\n          setCount(count - priceFactoryHotel);\n          setLevelFactoryHotel(levelFactoryHotel + 1);\n          setFactoryBonus(factoryBonus + 2);\n          setPriceFactoryHotel(priceFactoryHotel + 1000);\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n  const FactoryBank = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelFactoryBank === 5) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (window.confirm(\"By buying a shoe factory, you will receive +5 coins every 1 seconds.\\nBuy it?\")) {\n        if (count >= priceFactoryBank) {\n          setCount(count - priceFactoryBank);\n          setLevelFactoryBank(levelFactoryBank + 1);\n          setFactoryBonus(factoryBonus + 1);\n          setPriceFactoryBank(priceFactoryBank + 1000);\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n\n  //Tasks\n\n  const JoinGame = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelJoinGame === 1) {\n      alert(\"You have already completed this task ✅\");\n    } else {\n      setLevelJoinGame(levelJoinGame + 1);\n      setCount(count + 10000);\n      alert(\"Welcome to the game!!! You get +10000 coins. 🎁\");\n    }\n  };\n  const TgPremium = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelTgPremium === 1) {\n      alert(\"You have already completed this task ✅\");\n    } else {\n      if (window.confirm(\"If you have Telegram premium you get +20,000 coins.\\nTo execute?\")) {\n        if (tg.initDataUnsafe.user.is_premium) {\n          setCount(count + 20000);\n          setlevelTgPremium(levelTgPremium + 1);\n          alert(\"Yoooo!\\nCongratulations on buying TG Premium! ⭐️\");\n        } else {\n          alert(\"Sorry, but you don't have tg premium 😔\");\n        }\n      }\n    }\n  };\n  const TgChannel1 = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelTgChannel1 === 1) {\n      alert(\"You have already completed this task ✅\");\n    } else {\n      //тут должна быть проверка\n      if (false) {\n        //здесь вместо false должен быть вывод проверки\n        setCount(count + 20000);\n        setLevelTgChannel1(levelTgChannel1 + 1);\n        alert(\"You are subscribed to the channel! ✅\");\n      } else {\n        if (window.confirm(\"If you subscribe to the TG channel, you get +10,000 coins. To execute?\")) {\n          tg.openTelegramLink(\"https://t.me/deanon_team_blog\");\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Loading-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: [\"Welcome\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), \"Quack Coin!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"loading-wheel\",\n        src: \"https://printhiegprog.github.io/loading-wheel.png\",\n        alt: \"loading-wheel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Main, {\n            count: count,\n            handleClick: handleClick,\n            countTrue: countTrue,\n            canClick: canClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/boost\",\n          element: /*#__PURE__*/_jsxDEV(Boost, {\n            count: count,\n            moreClicks: moreClicks,\n            priceMoreClicks: priceMoreClicks,\n            levelMoreClicks: levelMoreClicks,\n            moreEnergy: moreEnergy,\n            priceMoreEnergy: priceMoreEnergy,\n            levelMoreEnergy: levelMoreEnergy,\n            MoreCountTrueBonus: MoreCountTrueBonus,\n            levelMoreCountTrueBonus: levelMoreCountTrueBonus,\n            priceMoreCountTrueBonus: priceMoreCountTrueBonus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/task\",\n          element: /*#__PURE__*/_jsxDEV(Task, {\n            JoinGame: JoinGame,\n            TgPremium: TgPremium,\n            TgChannel1: TgChannel1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/monopoly\",\n          element: /*#__PURE__*/_jsxDEV(Monopoly, {\n            FactoryShoes: FactoryShoes,\n            priceFactoryShoes: priceFactoryShoes,\n            levelFactoryShoes: levelFactoryShoes,\n            FactoryHotel: FactoryHotel,\n            priceFactoryHotel: FactoryHotel,\n            levelFactoryHotel: levelFactoryHotel,\n            FactoryBank: FactoryBank,\n            priceFactoryBank: priceFactoryBank,\n            levelFactoryBank: levelFactoryBank\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TjhD93bp8VIcPAb1nOpUVDdT2wQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NavBar","Boost","Main","Task","Monopoly","BrowserRouter","Router","Routes","Route","useNavigate","axios","jsxDEV","_jsxDEV","App","_s","tg","window","Telegram","WebApp","userId","initDataUnsafe","user","id","count","setCount","countBonus","setCountBonus","countTrueMax","setcountTrueMax","countTrueBonus","setCountTrueBonus","levelMoreClicks","setLevelMoreClicks","levelMoreEnergy","setLevelMoreEnergy","levelTgChannel1","setLevelTgChannel1","levelTgPremium","setlevelTgPremium","levelMoreCountTrueBonus","setLevelMoreCountTrueBonus","levelFactoryShoes","setLevelFactoryShoes","levelFactoryHotel","setLevelFactoryHotel","levelFactoryBank","setLevelFactoryBank","levelJoinGame","setLevelJoinGame","countTrue","setCountTrue","canClick","setCanClick","priceMoreClicks","setPriceMoreClicks","priceMoreEnergy","setPriceMoreEnergy","priceMoreCountTrueBonus","setPriceMoreCountTrueBonus","priceFactoryShoes","setPriceFactoryShoes","priceFactoryHotel","setPriceFactoryHotel","priceFactoryBank","setPriceFactoryBank","factoryBonus","setFactoryBonus","interval","setInterval","prevCount","clearInterval","handleClick","hapticFeedbackLight","HapticFeedback","impactOccurred","Math","max","setTimeout","handleOnline","console","log","handleOffline","alert","location","reload","addEventListener","navigator","onLine","removeEventListener","HapticFeedbackError","notificationOccurred","loading","setLoading","moreClicks","hapticFeedbackSoft","confirm","moreEnergy","MoreCountTrueBonus","FactoryShoes","FactoryHotel","FactoryBank","JoinGame","TgPremium","is_premium","TgChannel1","openTelegramLink","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","exact","path","element","_c","$RefreshReg$"],"sources":["/Users/egorkobzev/scroodge coin/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./NavBar/NavBar.js\";\nimport Boost from \"./Boost.js\";\nimport Main from \"./Main.js\";\nimport Task from \"./Task.js\";\nimport Monopoly from \"./Monopoly.js\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  useNavigate,\n} from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction App() {\n  const tg = window.Telegram.WebApp;\n  const userId = tg.initDataUnsafe.user.id;\n\n  const [count, setCount] = useState(0);\n  const [countBonus, setCountBonus] = useState(1);\n  const [countTrueMax, setcountTrueMax] = useState(1000);\n  const [countTrueBonus, setCountTrueBonus] = useState(1);\n  const [levelMoreClicks, setLevelMoreClicks] = useState(0);\n  const [levelMoreEnergy, setLevelMoreEnergy] = useState(0);\n  const [levelTgChannel1, setLevelTgChannel1] = useState(0);\n  const [levelTgPremium, setlevelTgPremium] = useState(0);\n  const [levelMoreCountTrueBonus, setLevelMoreCountTrueBonus] = useState(0);\n  const [levelFactoryShoes, setLevelFactoryShoes] = useState(0);\n  const [levelFactoryHotel, setLevelFactoryHotel] = useState(0);\n  const [levelFactoryBank, setLevelFactoryBank] = useState(0);\n  const [levelJoinGame, setLevelJoinGame] = useState(0);\n  const [countTrue, setCountTrue] = useState(1000);\n  const [canClick, setCanClick] = useState(true);\n  const [priceMoreClicks, setPriceMoreClicks] = useState(1000);\n  const [priceMoreEnergy, setPriceMoreEnergy] = useState(2000);\n  const [priceMoreCountTrueBonus, setPriceMoreCountTrueBonus] = useState(3000);\n  const [priceFactoryShoes, setPriceFactoryShoes] = useState(5000);\n  const [priceFactoryHotel, setPriceFactoryHotel] = useState(10000);\n  const [priceFactoryBank, setPriceFactoryBank] = useState(100000)\n  const [factoryBonus, setFactoryBonus] = useState(0);\n\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (countTrue < countTrueMax) {\n        setCountTrue((prevCount) => prevCount + countTrueBonus);\n      }\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, [countTrue]);\n  \n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (factoryBonus > 0) {\n        setCount((prevCount) => prevCount + factoryBonus)\n      }\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [count]);\n  \n\n\n  const handleClick = () => {\n    if (canClick) {\n      setCount(count + countBonus);\n      if (true) {\n        const hapticFeedbackLight = tg.HapticFeedback.impactOccurred(\"light\");\n      }\n\n      if (countTrue > 0) {\n        setCountTrue(Math.max(countTrue - 1, 0));\n      }\n\n      setCanClick(false);\n      setTimeout(() => {\n        setCanClick(true);\n      }, 1);\n    }\n  };\n\n  useEffect(() => {\n    const handleOnline = () => {\n      console.log(\"Connected to the internet\");\n    };\n\n    const handleOffline = () => {\n      alert(\"No connection network\");\n      window.location.reload(); \n    };\n\n    // Добавляем обработчики событий\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    // Проверка начального состояния\n    while (!navigator.onLine) {\n      alert(\"No connection network\");\n      window.location.reload(); \n\n    }\n\n    // Убираем обработчики событий при размонтировании компонента\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (countTrue === 0) {\n      const HapticFeedbackError =\n        tg.HapticFeedback.notificationOccurred(\"warning\");\n      alert(\"Scrooge is tired... 😴\");\n    }\n  }, [countTrue]);\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Имитация загрузки данных (можете заменить этот setTimeout на реальную логику загрузки)\n    setTimeout(() => {\n      setLoading(false); // После завершения загрузки устанавливаем loading в false\n    }, 3000); // Пример: имитация загрузки в течение 3 секунд\n\n    // Здесь можно добавить логику для загрузки данных с сервера или другие операции\n  }, []);\n\n  //Boosts\n  \n  const moreClicks = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelMoreClicks === 10) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (\n        window.confirm(\"Here you can buy more clicks in one click 🤑.\\nBuy it?\")\n      ) {\n        if (count >= priceMoreClicks) {\n          setCount(count - priceMoreClicks);\n          setCountBonus(countBonus + 1);\n          setLevelMoreClicks(levelMoreClicks + 1);\n          setPriceMoreClicks(priceMoreClicks + 1000)\n          alert(\"Thanks for the purchase ✅\");\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n\n  \n  const moreEnergy = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelMoreEnergy === 7) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (window.confirm(\"Here you can buy more energy.\\nBuy it?\")) {\n        if (count >= priceMoreEnergy) {\n          setCount(count - priceMoreEnergy);\n          setCountTrue(countTrue + 1000);\n          setcountTrueMax(countTrueMax + 1000);\n          setLevelMoreEnergy(levelMoreEnergy + 1);\n          setPriceMoreEnergy(priceMoreEnergy + 1000)\n          alert(\"Thanks for the purchase ✅\");\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n\n  const MoreCountTrueBonus = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelMoreCountTrueBonus === 10) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (\n        window.confirm(\"Here you can buy more energy to be charged.\\nBuy it?\")\n      ) {\n        if (count >= priceMoreCountTrueBonus) {\n          setCount(count - priceMoreCountTrueBonus);\n          setCountTrueBonus(countTrueBonus + 1);\n          setLevelMoreCountTrueBonus(levelMoreCountTrueBonus + 1);\n          setPriceMoreCountTrueBonus(priceMoreCountTrueBonus + 2000);\n          alert(\"Thanks for the purchase ✅\");\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n\n  \n  const FactoryShoes = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelFactoryShoes === 5) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (\n        window.confirm(\n          \"By buying a shoe factory, you will receive +1 coins every 10 seconds.\\nBuy it?\"\n        )\n      ) {\n        if (count >= priceFactoryShoes) {\n          setCount(count - priceFactoryShoes);\n          setLevelFactoryShoes(levelFactoryShoes + 1);\n          setFactoryBonus(factoryBonus + 1);\n          setPriceFactoryShoes(priceFactoryShoes + 1000);\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n\n  const FactoryHotel = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelFactoryHotel === 5) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (\n        window.confirm(\n          \"By buying a shoe factory, you will receive +2 coins every 1 seconds.\\nBuy it?\"\n        )\n      ) {\n        if (count >= priceFactoryHotel) {\n          setCount(count - priceFactoryHotel);\n          setLevelFactoryHotel(levelFactoryHotel + 1);\n          setFactoryBonus(factoryBonus + 2);\n          setPriceFactoryHotel(priceFactoryHotel + 1000);\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n\n  const FactoryBank = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelFactoryBank === 5) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (\n        window.confirm(\n          \"By buying a shoe factory, you will receive +5 coins every 1 seconds.\\nBuy it?\"\n        )\n      ) {\n        if (count >= priceFactoryBank) {\n          setCount(count - priceFactoryBank);\n          setLevelFactoryBank(levelFactoryBank + 1);\n          setFactoryBonus(factoryBonus + 1);\n          setPriceFactoryBank(priceFactoryBank + 1000);\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n\n  \n\n  //Tasks\n\n  const JoinGame = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelJoinGame === 1) {\n      alert(\"You have already completed this task ✅\");\n    } else {\n      setLevelJoinGame(levelJoinGame + 1)\n      setCount(count + 10000)\n      alert(\"Welcome to the game!!! You get +10000 coins. 🎁\");\n    }\n  }\n\n  const TgPremium = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelTgPremium === 1) {\n      alert(\"You have already completed this task ✅\");\n    } else {\n      if (\n        window.confirm(\n          \"If you have Telegram premium you get +20,000 coins.\\nTo execute?\"\n        )\n      ) {\n        if (tg.initDataUnsafe.user.is_premium) {\n          setCount(count + 20000);\n          setlevelTgPremium(levelTgPremium + 1);\n          alert(\"Yoooo!\\nCongratulations on buying TG Premium! ⭐️\");\n        } else {\n          alert(\"Sorry, but you don't have tg premium 😔\");\n        }\n      }\n    }\n  };\n\n  const TgChannel1 = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelTgChannel1 === 1) {\n      alert(\"You have already completed this task ✅\");\n    } else {\n      //тут должна быть проверка\n      if (false) {\n        //здесь вместо false должен быть вывод проверки\n        setCount(count + 20000);\n        setLevelTgChannel1(levelTgChannel1 + 1);\n        alert(\"You are subscribed to the channel! ✅\");\n      } else {\n        if (\n          window.confirm(\n            \"If you subscribe to the TG channel, you get +10,000 coins. To execute?\"\n          )\n        ) {\n          tg.openTelegramLink(\"https://t.me/deanon_team_blog\");\n        } \n      }\n      \n    }\n  }\n\n  \n  \n\n\n  return (\n    <div className=\"App\">\n      {loading ? (\n        <div className=\"Loading-page\">\n          <h1 className=\"title\">\n            Welcome\n            <br />\n            Quack Coin!\n          </h1>\n          <img\n            className=\"loading-wheel\"\n            src=\"https://printhiegprog.github.io/loading-wheel.png\"\n            alt=\"loading-wheel\"\n          />\n          <div className=\"contact\"></div>\n        </div>\n      ) : (\n        <Router>\n          <Routes>\n            <Route\n              exact\n              path=\"/\"\n              element={\n                <Main\n                  count={count}\n                  handleClick={handleClick}\n                  countTrue={countTrue}\n                  canClick={canClick}\n                />\n              }\n            />\n            <Route\n              path=\"/boost\"\n              element={\n                <Boost\n                  count={count}\n                  moreClicks={moreClicks}\n                  priceMoreClicks={priceMoreClicks}\n                  levelMoreClicks={levelMoreClicks}\n                  moreEnergy={moreEnergy}\n                  priceMoreEnergy={priceMoreEnergy}\n                  levelMoreEnergy={levelMoreEnergy}\n                  MoreCountTrueBonus={MoreCountTrueBonus}\n                  levelMoreCountTrueBonus={levelMoreCountTrueBonus}\n                  priceMoreCountTrueBonus={priceMoreCountTrueBonus}\n                />\n              }\n            />\n            <Route\n              path=\"/task\"\n              element={\n                <Task\n                  JoinGame={JoinGame}\n                  TgPremium={TgPremium}\n                  TgChannel1={TgChannel1}\n                />\n              }\n            />\n            <Route\n              path=\"/monopoly\"\n              element={\n                <Monopoly\n                  FactoryShoes={FactoryShoes}\n                  priceFactoryShoes={priceFactoryShoes}\n                  levelFactoryShoes={levelFactoryShoes}\n                  FactoryHotel={FactoryHotel}\n                  priceFactoryHotel={FactoryHotel}\n                  levelFactoryHotel={levelFactoryHotel}\n                  FactoryBank={FactoryBank}\n                  priceFactoryBank={priceFactoryBank}\n                  levelFactoryBank={levelFactoryBank}\n                />\n              }\n            />\n          </Routes>\n          <NavBar />\n        </Router>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}