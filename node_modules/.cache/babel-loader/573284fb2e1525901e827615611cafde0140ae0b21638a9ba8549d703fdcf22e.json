{"ast":null,"code":"var _jsxFileName = \"/Users/egorkobzev/scroodge coin/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./NavBar/NavBar.js\";\nimport Boost from \"./Boost.js\";\nimport Main from \"./Main.js\";\nimport Task from \"./Task.js\";\nimport Monopoly from \"./Monopoly.js\";\nimport MarketFactory from \"./MarketFactory.js\";\nimport MarketPowerStation from \"./MarketPowerStation.js\";\nimport MarketHotel from \"./MarketHotel.js\";\nimport ScroogeGameFlappy from \"./ScroogeGameFlappy.js\";\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const tg = window.Telegram.WebApp;\n  const userId = tg.initDataUnsafe.user.id;\n  const [count, setCount] = useState(() => {\n    const savedCount = localStorage.getItem(\"count\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [countBonus, setCountBonus] = useState(() => {\n    const savedCount = localStorage.getItem(\"countBonus\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 1;\n  });\n  const [countTrueMax, setcountTrueMax] = useState(() => {\n    const savedCount = localStorage.getItem(\"countTrueMax\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 1000;\n  });\n  const [countTrueBonus, setCountTrueBonus] = useState(() => {\n    const savedCount = localStorage.getItem(\"countTrueBonus\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 1;\n  });\n  const [levelMoreClicks, setLevelMoreClicks] = useState(() => {\n    const savedCount = localStorage.getItem(\"levelMoreClicks\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [levelMoreEnergy, setLevelMoreEnergy] = useState(() => {\n    const savedCount = localStorage.getItem(\"levelMoreEnergy\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [levelTgChannel1, setLevelTgChannel1] = useState(() => {\n    const savedCount = localStorage.getItem(\"levelTgChannel1\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [levelTgPremium, setlevelTgPremium] = useState(() => {\n    const savedCount = localStorage.getItem(\"levelTgPremium\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [levelMoreCountTrueBonus, setLevelMoreCountTrueBonus] = useState(() => {\n    const savedCount = localStorage.getItem(\"levelMoreCountTrueBonus\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [levelFactoryShoes, setLevelFactoryShoes] = useState(() => {\n    const savedCount = localStorage.getItem(\"levelFactoryShoes\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [levelFactoryHotel, setLevelFactoryHotel] = useState(() => {\n    const savedCount = localStorage.getItem(\"levelFactoryHotel\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [levelFactoryBank, setLevelFactoryBank] = useState(() => {\n    const savedCount = localStorage.getItem(\"levelFactoryBank\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [levelJoinGame, setLevelJoinGame] = useState(() => {\n    const savedCount = localStorage.getItem(\"levelJoinGame\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [countTrue, setCountTrue] = useState(() => {\n    const savedCount = localStorage.getItem(\"countTrue\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 1000;\n  });\n  const [canClick, setCanClick] = useState(true);\n  const [priceMoreClicks, setPriceMoreClicks] = useState(() => {\n    const savedCount = localStorage.getItem(\"priceMoreClicks\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 1000;\n  });\n  const [priceMoreEnergy, setPriceMoreEnergy] = useState(() => {\n    const savedCount = localStorage.getItem(\"priceMoreEnergy\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 2000;\n  });\n  const [priceMoreCountTrueBonus, setPriceMoreCountTrueBonus] = useState(() => {\n    const savedCount = localStorage.getItem(\"priceMoreCountTrueBonus\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 3000;\n  });\n  const [priceFactoryShoes, setPriceFactoryShoes] = useState(() => {\n    const savedCount = localStorage.getItem(\"priceFactoryShoes\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 5000;\n  });\n  const [priceFactoryHotel, setPriceFactoryHotel] = useState(() => {\n    const savedCount = localStorage.getItem(\"priceFactoryHotel\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 10000;\n  });\n  const [priceFactoryBank, setPriceFactoryBank] = useState(() => {\n    const savedCount = localStorage.getItem(\"priceFactoryBank\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 100000;\n  });\n  const [factoryBonus, setFactoryBonus] = useState(() => {\n    const savedCount = localStorage.getItem(\"factoryBonus\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n\n  // Загружаем сохраненное значение count из localStorage при инициализации состояния\n\n  useEffect(() => {\n    // Сохраняем значение count в localStorage при его изменении\n    localStorage.setItem(\"count\", count);\n    localStorage.setItem(\"countBonus\", countBonus);\n    localStorage.setItem(\"countTrueMax\", countTrueMax);\n    localStorage.setItem(\"countTrueBonus\", countTrueBonus);\n    localStorage.setItem(\"levelMoreClicks\", levelMoreClicks);\n    localStorage.setItem(\"levelMoreEnergy\", levelMoreEnergy);\n    localStorage.setItem(\"levelTgChannel1\", levelTgChannel1);\n    localStorage.setItem(\"levelTgPremium\", levelTgPremium);\n    localStorage.setItem(\"levelMoreCountTrueBonus\", levelMoreCountTrueBonus);\n    localStorage.setItem(\"levelFactoryShoes\", levelFactoryShoes);\n    localStorage.setItem(\"levelFactoryHotel\", levelFactoryHotel);\n    localStorage.setItem(\"levelFactoryBank\", levelFactoryBank);\n    localStorage.setItem(\"levelJoinGame\", levelJoinGame);\n    localStorage.setItem(\"countTrue\", countTrue);\n    localStorage.setItem(\"priceMoreClicks,\", priceMoreClicks);\n    localStorage.setItem(\"priceMoreEnergy\", priceMoreEnergy);\n    localStorage.setItem(\"priceMoreCountTrueBonus\", priceMoreCountTrueBonus);\n    localStorage.setItem(\"priceFactoryShoes\", priceFactoryShoes);\n    localStorage.setItem(\"priceFactoryHotel\", priceFactoryHotel);\n    localStorage.setItem(\"priceFactoryBank\", priceFactoryBank);\n    localStorage.setItem(\"factoryBonus\", factoryBonus);\n  }, [count, countBonus, countTrueMax, countTrueBonus, levelMoreClicks, levelMoreEnergy, levelTgChannel1, levelTgPremium, levelMoreCountTrueBonus, levelFactoryShoes, levelFactoryHotel, levelFactoryBank, levelJoinGame, countTrue, priceMoreClicks, priceMoreEnergy, priceMoreCountTrueBonus, priceFactoryShoes, priceFactoryHotel, priceFactoryBank, factoryBonus]); // Зависимость от переменных, чтобы эффект срабатывал при их изменении\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (countTrue < countTrueMax) {\n        setCountTrue(prevCount => prevCount + countTrueBonus);\n      }\n    }, 3000);\n    return () => clearInterval(interval);\n  }, [countTrue]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (factoryBonus > 0) {\n        setCount(prevCount => prevCount + factoryBonus);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [count]);\n  const handleClick = () => {\n    if (canClick) {\n      setCount(count + countBonus);\n      if (true) {\n        const hapticFeedbackLight = tg.HapticFeedback.impactOccurred(\"light\");\n      }\n      if (countTrue > 0) {\n        setCountTrue(Math.max(countTrue - 1, 0));\n      }\n      setCanClick(false);\n      setTimeout(() => {\n        setCanClick(true);\n      }, 1);\n    }\n  };\n  useEffect(() => {\n    const handleOnline = () => {\n      console.log(\"Connected to the internet\");\n    };\n    const handleOffline = () => {\n      alert(\"No connection network\");\n      window.location.reload();\n    };\n\n    // Добавляем обработчики событий\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    // Проверка начального состояния\n    while (!navigator.onLine) {\n      alert(\"No connection network\");\n      window.location.reload();\n    }\n\n    // Убираем обработчики событий при размонтировании компонента\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n  useEffect(() => {\n    if (countTrue === 0) {\n      const HapticFeedbackError = tg.HapticFeedback.notificationOccurred(\"warning\");\n      alert(\"Scrooge is tired... 😴\");\n    }\n  }, [countTrue]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Имитация загрузки данных (можете заменить этот setTimeout на реальную логику загрузки)\n    setTimeout(() => {\n      setLoading(false); // После завершения загрузки устанавливаем loading в false\n    }, 3000); // Пример: имитация загрузки в течение 3 секунд\n\n    // Здесь можно добавить логику для загрузки данных с сервера или другие операции\n  }, []);\n\n  //Boosts\n\n  const moreClicks = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelMoreClicks === 10) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (window.confirm(\"Here you can buy more clicks in one click 🤑.\\nBuy it?\")) {\n        if (count >= priceMoreClicks) {\n          setCount(count - priceMoreClicks);\n          setCountBonus(countBonus + 1);\n          setLevelMoreClicks(levelMoreClicks + 1);\n          setPriceMoreClicks(priceMoreClicks + 1000);\n          alert(\"Thanks for the purchase ✅\");\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n  const moreEnergy = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelMoreEnergy === 7) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (window.confirm(\"Here you can buy more energy.\\nBuy it?\")) {\n        if (count >= priceMoreEnergy) {\n          setCount(count - priceMoreEnergy);\n          setCountTrue(countTrue + 1000);\n          setcountTrueMax(countTrueMax + 1000);\n          setLevelMoreEnergy(levelMoreEnergy + 1);\n          setPriceMoreEnergy(priceMoreEnergy + 1000);\n          alert(\"Thanks for the purchase ✅\");\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n  const MoreCountTrueBonus = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelMoreCountTrueBonus === 10) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (window.confirm(\"Here you can buy more energy to be charged.\\nBuy it?\")) {\n        if (count >= priceMoreCountTrueBonus) {\n          setCount(count - priceMoreCountTrueBonus);\n          setCountTrueBonus(countTrueBonus + 1);\n          setLevelMoreCountTrueBonus(levelMoreCountTrueBonus + 1);\n          setPriceMoreCountTrueBonus(priceMoreCountTrueBonus + 2000);\n          alert(\"Thanks for the purchase ✅\");\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n  const FactoryShoes = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelFactoryShoes === 5) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (window.confirm(\"By buying a shoe factory, you will receive +1 coins every 10 seconds.\\nBuy it?\")) {\n        if (count >= priceFactoryShoes) {\n          setCount(count - priceFactoryShoes);\n          setLevelFactoryShoes(levelFactoryShoes + 1);\n          setFactoryBonus(factoryBonus + 1);\n          setPriceFactoryShoes(priceFactoryShoes + 1000);\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n  const FactoryHotel = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelFactoryHotel === 5) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (window.confirm(\"By buying a shoe factory, you will receive +2 coins every 1 seconds.\\nBuy it?\")) {\n        if (count >= priceFactoryHotel) {\n          setCount(count - priceFactoryHotel);\n          setLevelFactoryHotel(levelFactoryHotel + 1);\n          setFactoryBonus(factoryBonus + 2);\n          setPriceFactoryHotel(priceFactoryHotel + 1000);\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n  const FactoryBank = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelFactoryBank === 5) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (window.confirm(\"By buying a shoe factory, you will receive +5 coins every 1 seconds.\\nBuy it?\")) {\n        if (count >= priceFactoryBank) {\n          setCount(count - priceFactoryBank);\n          setLevelFactoryBank(levelFactoryBank + 1);\n          setFactoryBonus(factoryBonus + 1);\n          setPriceFactoryBank(priceFactoryBank + 1000);\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n\n  //Tasks\n\n  const JoinGame = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelJoinGame === 1) {\n      alert(\"You have already completed this task ✅\");\n    } else {\n      setLevelJoinGame(levelJoinGame + 1);\n      setCount(count + 10000);\n      alert(\"Welcome to the game!!! You get +10000 coins. 🎁\");\n    }\n  };\n  const TgPremium = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelTgPremium === 1) {\n      alert(\"You have already completed this task ✅\");\n    } else {\n      if (window.confirm(\"If you have Telegram premium you get +20,000 coins.\\nTo execute?\")) {\n        if (tg.initDataUnsafe.user.is_premium) {\n          setCount(count + 20000);\n          setlevelTgPremium(levelTgPremium + 1);\n          alert(\"Yoooo!\\nCongratulations on buying TG Premium! ⭐️\");\n        } else {\n          alert(\"Sorry, but you don't have tg premium 😔\");\n        }\n      }\n    }\n  };\n  const TgChannel1 = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelTgChannel1 === 1) {\n      alert(\"You have already completed this task ✅\");\n    } else {\n      //тут должна быть проверка\n      if (false) {\n        //здесь вместо false должен быть вывод проверки\n        setCount(count + 20000);\n        setLevelTgChannel1(levelTgChannel1 + 1);\n        alert(\"You are subscribed to the channel! ✅\");\n      } else {\n        if (window.confirm(\"If you subscribe to the TG channel, you get +10,000 coins. To execute?\")) {\n          tg.openTelegramLink(\"https://t.me/deanon_team_blog\");\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Loading-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: [\"Welcome\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this), \"Quack Coin!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"loading-wheel\",\n        src: \"https://printhiegprog.github.io/loading-wheel.png\",\n        alt: \"loading-wheel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Main, {\n            count: count,\n            handleClick: handleClick,\n            countTrue: countTrue,\n            canClick: canClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/boost\",\n          element: /*#__PURE__*/_jsxDEV(Boost, {\n            count: count,\n            moreClicks: moreClicks,\n            priceMoreClicks: priceMoreClicks,\n            levelMoreClicks: levelMoreClicks,\n            moreEnergy: moreEnergy,\n            priceMoreEnergy: priceMoreEnergy,\n            levelMoreEnergy: levelMoreEnergy,\n            MoreCountTrueBonus: MoreCountTrueBonus,\n            levelMoreCountTrueBonus: levelMoreCountTrueBonus,\n            priceMoreCountTrueBonus: priceMoreCountTrueBonus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/task\",\n          element: /*#__PURE__*/_jsxDEV(Task, {\n            JoinGame: JoinGame,\n            TgPremium: TgPremium,\n            TgChannel1: TgChannel1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/monopoly\",\n          element: /*#__PURE__*/_jsxDEV(Monopoly, {\n            FactoryShoes: FactoryShoes,\n            priceFactoryShoes: priceFactoryShoes,\n            levelFactoryShoes: levelFactoryShoes,\n            FactoryHotel: FactoryHotel,\n            priceFactoryHotel: priceFactoryHotel,\n            levelFactoryHotel: levelFactoryHotel,\n            FactoryBank: FactoryBank,\n            priceFactoryBank: priceFactoryBank,\n            levelFactoryBank: levelFactoryBank\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/monopoly/market-factory\",\n          element: /*#__PURE__*/_jsxDEV(MarketFactory, {\n            FactoryBank: FactoryBank,\n            priceFactoryBank: priceFactoryBank,\n            levelFactoryBank: levelFactoryBank\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/monopoly/market-powerstation\",\n          element: /*#__PURE__*/_jsxDEV(MarketPowerStation, {\n            FactoryShoes: FactoryShoes,\n            priceFactoryShoes: priceFactoryShoes,\n            levelFactoryShoes: levelFactoryShoes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/monopoly/market-hotel\",\n          element: /*#__PURE__*/_jsxDEV(MarketHotel, {\n            FactoryHotel: FactoryHotel,\n            priceFactoryHotel: priceFactoryHotel,\n            levelFactoryHotel: levelFactoryHotel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 434,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"141GC9I/iucc3qjlR3AotQWYsN0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NavBar","Boost","Main","Task","Monopoly","MarketFactory","MarketPowerStation","MarketHotel","ScroogeGameFlappy","BrowserRouter","Router","Routes","Route","useNavigate","jsxDEV","_jsxDEV","App","_s","tg","window","Telegram","WebApp","userId","initDataUnsafe","user","id","count","setCount","savedCount","localStorage","getItem","parseInt","countBonus","setCountBonus","countTrueMax","setcountTrueMax","countTrueBonus","setCountTrueBonus","levelMoreClicks","setLevelMoreClicks","levelMoreEnergy","setLevelMoreEnergy","levelTgChannel1","setLevelTgChannel1","levelTgPremium","setlevelTgPremium","levelMoreCountTrueBonus","setLevelMoreCountTrueBonus","levelFactoryShoes","setLevelFactoryShoes","levelFactoryHotel","setLevelFactoryHotel","levelFactoryBank","setLevelFactoryBank","levelJoinGame","setLevelJoinGame","countTrue","setCountTrue","canClick","setCanClick","priceMoreClicks","setPriceMoreClicks","priceMoreEnergy","setPriceMoreEnergy","priceMoreCountTrueBonus","setPriceMoreCountTrueBonus","priceFactoryShoes","setPriceFactoryShoes","priceFactoryHotel","setPriceFactoryHotel","priceFactoryBank","setPriceFactoryBank","factoryBonus","setFactoryBonus","setItem","interval","setInterval","prevCount","clearInterval","handleClick","hapticFeedbackLight","HapticFeedback","impactOccurred","Math","max","setTimeout","handleOnline","console","log","handleOffline","alert","location","reload","addEventListener","navigator","onLine","removeEventListener","HapticFeedbackError","notificationOccurred","loading","setLoading","moreClicks","hapticFeedbackSoft","confirm","moreEnergy","MoreCountTrueBonus","FactoryShoes","FactoryHotel","FactoryBank","JoinGame","TgPremium","is_premium","TgChannel1","openTelegramLink","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","exact","path","element","_c","$RefreshReg$"],"sources":["/Users/egorkobzev/scroodge coin/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./NavBar/NavBar.js\";\nimport Boost from \"./Boost.js\";\nimport Main from \"./Main.js\";\nimport Task from \"./Task.js\";\nimport Monopoly from \"./Monopoly.js\";\nimport MarketFactory from \"./MarketFactory.js\";\nimport MarketPowerStation from \"./MarketPowerStation.js\"\nimport MarketHotel from \"./MarketHotel.js\"\nimport ScroogeGameFlappy from \"./ScroogeGameFlappy.js\";\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  useNavigate,\n} from \"react-router-dom\";\n\nfunction App() {\n  const tg = window.Telegram.WebApp;\n  const userId = tg.initDataUnsafe.user.id;\n\n  const [count, setCount] = useState(() => {\n    const savedCount = localStorage.getItem(\"count\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [countBonus, setCountBonus] = useState(() => {\n    const savedCount = localStorage.getItem(\"countBonus\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 1;\n  });\n  const [countTrueMax, setcountTrueMax] = useState(() => {\n    const savedCount = localStorage.getItem(\"countTrueMax\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 1000;\n  });\n  const [countTrueBonus, setCountTrueBonus] = useState(() => {\n    const savedCount = localStorage.getItem(\"countTrueBonus\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 1;\n  });\n  const [levelMoreClicks, setLevelMoreClicks] = useState(() => {\n    const savedCount = localStorage.getItem(\"levelMoreClicks\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [levelMoreEnergy, setLevelMoreEnergy] = useState(() => {\n    const savedCount = localStorage.getItem(\"levelMoreEnergy\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [levelTgChannel1, setLevelTgChannel1] = useState(() => {\n    const savedCount = localStorage.getItem(\"levelTgChannel1\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [levelTgPremium, setlevelTgPremium] = useState(() => {\n    const savedCount = localStorage.getItem(\"levelTgPremium\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [levelMoreCountTrueBonus, setLevelMoreCountTrueBonus] = useState(() => {\n    const savedCount = localStorage.getItem(\"levelMoreCountTrueBonus\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [levelFactoryShoes, setLevelFactoryShoes] = useState(() => {\n    const savedCount = localStorage.getItem(\"levelFactoryShoes\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [levelFactoryHotel, setLevelFactoryHotel] = useState(() => {\n    const savedCount = localStorage.getItem(\"levelFactoryHotel\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [levelFactoryBank, setLevelFactoryBank] = useState(() => {\n    const savedCount = localStorage.getItem(\"levelFactoryBank\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [levelJoinGame, setLevelJoinGame] = useState(() => {\n    const savedCount = localStorage.getItem(\"levelJoinGame\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n  const [countTrue, setCountTrue] = useState(() => {\n    const savedCount = localStorage.getItem(\"countTrue\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 1000;\n  });\n  const [canClick, setCanClick] = useState(true);\n  const [priceMoreClicks, setPriceMoreClicks] = useState(() => {\n    const savedCount = localStorage.getItem(\"priceMoreClicks\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 1000;\n  });\n  const [priceMoreEnergy, setPriceMoreEnergy] = useState(() => {\n    const savedCount = localStorage.getItem(\"priceMoreEnergy\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 2000;\n  });\n  const [priceMoreCountTrueBonus, setPriceMoreCountTrueBonus] = useState(() => {\n    const savedCount = localStorage.getItem(\"priceMoreCountTrueBonus\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 3000;\n  });\n  const [priceFactoryShoes, setPriceFactoryShoes] = useState(() => {\n    const savedCount = localStorage.getItem(\"priceFactoryShoes\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 5000;\n  });\n  const [priceFactoryHotel, setPriceFactoryHotel] = useState(() => {\n    const savedCount = localStorage.getItem(\"priceFactoryHotel\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 10000;\n  });\n  const [priceFactoryBank, setPriceFactoryBank] = useState(() => {\n    const savedCount = localStorage.getItem(\"priceFactoryBank\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 100000;\n  });\n  const [factoryBonus, setFactoryBonus] = useState(() => {\n    const savedCount = localStorage.getItem(\"factoryBonus\");\n    return savedCount !== null ? parseInt(savedCount, 10) : 0;\n  });\n\n  // Загружаем сохраненное значение count из localStorage при инициализации состояния\n   \n\n  useEffect(() => {\n    // Сохраняем значение count в localStorage при его изменении\n    localStorage.setItem(\"count\", count);\n    localStorage.setItem(\"countBonus\", countBonus);\n    localStorage.setItem(\"countTrueMax\", countTrueMax);\n    localStorage.setItem(\"countTrueBonus\", countTrueBonus);\n    localStorage.setItem(\"levelMoreClicks\", levelMoreClicks);\n    localStorage.setItem(\"levelMoreEnergy\", levelMoreEnergy);\n    localStorage.setItem(\"levelTgChannel1\", levelTgChannel1);\n    localStorage.setItem(\"levelTgPremium\", levelTgPremium);\n    localStorage.setItem(\"levelMoreCountTrueBonus\", levelMoreCountTrueBonus);\n    localStorage.setItem(\"levelFactoryShoes\", levelFactoryShoes);\n    localStorage.setItem(\"levelFactoryHotel\", levelFactoryHotel);\n    localStorage.setItem(\"levelFactoryBank\", levelFactoryBank);\n    localStorage.setItem(\"levelJoinGame\", levelJoinGame);\n    localStorage.setItem(\"countTrue\", countTrue);\n    localStorage.setItem(\"priceMoreClicks,\", priceMoreClicks);\n    localStorage.setItem(\"priceMoreEnergy\", priceMoreEnergy);\n    localStorage.setItem(\"priceMoreCountTrueBonus\", priceMoreCountTrueBonus);\n    localStorage.setItem(\"priceFactoryShoes\", priceFactoryShoes);\n    localStorage.setItem(\"priceFactoryHotel\", priceFactoryHotel);\n    localStorage.setItem(\"priceFactoryBank\", priceFactoryBank);\n    localStorage.setItem(\"factoryBonus\", factoryBonus);\n  }, [\n    count,\n    countBonus,\n    countTrueMax,\n    countTrueBonus,\n    levelMoreClicks,\n    levelMoreEnergy,\n    levelTgChannel1,\n    levelTgPremium,\n    levelMoreCountTrueBonus,\n    levelFactoryShoes,\n    levelFactoryHotel,\n    levelFactoryBank,\n    levelJoinGame,\n    countTrue,\n    priceMoreClicks,\n    priceMoreEnergy,\n    priceMoreCountTrueBonus,\n    priceFactoryShoes,\n    priceFactoryHotel,\n    priceFactoryBank,\n    factoryBonus\n  ]); // Зависимость от переменных, чтобы эффект срабатывал при их изменении\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (countTrue < countTrueMax) {\n        setCountTrue((prevCount) => prevCount + countTrueBonus);\n      }\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, [countTrue]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (factoryBonus > 0) {\n        setCount((prevCount) => prevCount + factoryBonus);\n      }\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [count]);\n\n  const handleClick = () => {\n    if (canClick) {\n      setCount(count + countBonus);\n      if (true) {\n        const hapticFeedbackLight = tg.HapticFeedback.impactOccurred(\"light\");\n      }\n\n      if (countTrue > 0) {\n        setCountTrue(Math.max(countTrue - 1, 0));\n      }\n\n      setCanClick(false);\n      setTimeout(() => {\n        setCanClick(true);\n      }, 1);\n    }\n  };\n\n  useEffect(() => {\n    const handleOnline = () => {\n      console.log(\"Connected to the internet\");\n    };\n\n    const handleOffline = () => {\n      alert(\"No connection network\");\n      window.location.reload();\n    };\n\n    // Добавляем обработчики событий\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    // Проверка начального состояния\n    while (!navigator.onLine) {\n      alert(\"No connection network\");\n      window.location.reload();\n    }\n\n    // Убираем обработчики событий при размонтировании компонента\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (countTrue === 0) {\n      const HapticFeedbackError =\n        tg.HapticFeedback.notificationOccurred(\"warning\");\n      alert(\"Scrooge is tired... 😴\");\n    }\n  }, [countTrue]);\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Имитация загрузки данных (можете заменить этот setTimeout на реальную логику загрузки)\n    setTimeout(() => {\n      setLoading(false); // После завершения загрузки устанавливаем loading в false\n    }, 3000); // Пример: имитация загрузки в течение 3 секунд\n\n    // Здесь можно добавить логику для загрузки данных с сервера или другие операции\n  }, []);\n\n  \n\n  //Boosts\n\n  const moreClicks = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelMoreClicks === 10) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (\n        window.confirm(\"Here you can buy more clicks in one click 🤑.\\nBuy it?\")\n      ) {\n        if (count >= priceMoreClicks) {\n          setCount(count - priceMoreClicks);\n          setCountBonus(countBonus + 1);\n          setLevelMoreClicks(levelMoreClicks + 1);\n          setPriceMoreClicks(priceMoreClicks + 1000);\n          alert(\"Thanks for the purchase ✅\");\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n\n  const moreEnergy = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelMoreEnergy === 7) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (window.confirm(\"Here you can buy more energy.\\nBuy it?\")) {\n        if (count >= priceMoreEnergy) {\n          setCount(count - priceMoreEnergy);\n          setCountTrue(countTrue + 1000);\n          setcountTrueMax(countTrueMax + 1000);\n          setLevelMoreEnergy(levelMoreEnergy + 1);\n          setPriceMoreEnergy(priceMoreEnergy + 1000);\n          alert(\"Thanks for the purchase ✅\");\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n\n  const MoreCountTrueBonus = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelMoreCountTrueBonus === 10) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (\n        window.confirm(\"Here you can buy more energy to be charged.\\nBuy it?\")\n      ) {\n        if (count >= priceMoreCountTrueBonus) {\n          setCount(count - priceMoreCountTrueBonus);\n          setCountTrueBonus(countTrueBonus + 1);\n          setLevelMoreCountTrueBonus(levelMoreCountTrueBonus + 1);\n          setPriceMoreCountTrueBonus(priceMoreCountTrueBonus + 2000);\n          alert(\"Thanks for the purchase ✅\");\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n\n  const FactoryShoes = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelFactoryShoes === 5) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (\n        window.confirm(\n          \"By buying a shoe factory, you will receive +1 coins every 10 seconds.\\nBuy it?\"\n        )\n      ) {\n        if (count >= priceFactoryShoes) {\n          setCount(count - priceFactoryShoes);\n          setLevelFactoryShoes(levelFactoryShoes + 1);\n          setFactoryBonus(factoryBonus + 1);\n          setPriceFactoryShoes(priceFactoryShoes + 1000);\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n\n  const FactoryHotel = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelFactoryHotel === 5) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (\n        window.confirm(\n          \"By buying a shoe factory, you will receive +2 coins every 1 seconds.\\nBuy it?\"\n        )\n      ) {\n        if (count >= priceFactoryHotel) {\n          setCount(count - priceFactoryHotel);\n          setLevelFactoryHotel(levelFactoryHotel + 1);\n          setFactoryBonus(factoryBonus + 2);\n          setPriceFactoryHotel(priceFactoryHotel + 1000);\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n\n  const FactoryBank = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelFactoryBank === 5) {\n      alert(\"Max level 🔝\");\n    } else {\n      if (\n        window.confirm(\n          \"By buying a shoe factory, you will receive +5 coins every 1 seconds.\\nBuy it?\"\n        )\n      ) {\n        if (count >= priceFactoryBank) {\n          setCount(count - priceFactoryBank);\n          setLevelFactoryBank(levelFactoryBank + 1);\n          setFactoryBonus(factoryBonus + 1);\n          setPriceFactoryBank(priceFactoryBank + 1000);\n        } else {\n          alert(\"Insufficient funds ❌\");\n        }\n      }\n    }\n  };\n\n  //Tasks\n\n  const JoinGame = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelJoinGame === 1) {\n      alert(\"You have already completed this task ✅\");\n    } else {\n      setLevelJoinGame(levelJoinGame + 1);\n      setCount(count + 10000);\n      alert(\"Welcome to the game!!! You get +10000 coins. 🎁\");\n    }\n  };\n\n  const TgPremium = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelTgPremium === 1) {\n      alert(\"You have already completed this task ✅\");\n    } else {\n      if (\n        window.confirm(\n          \"If you have Telegram premium you get +20,000 coins.\\nTo execute?\"\n        )\n      ) {\n        if (tg.initDataUnsafe.user.is_premium) {\n          setCount(count + 20000);\n          setlevelTgPremium(levelTgPremium + 1);\n          alert(\"Yoooo!\\nCongratulations on buying TG Premium! ⭐️\");\n        } else {\n          alert(\"Sorry, but you don't have tg premium 😔\");\n        }\n      }\n    }\n  };\n\n  const TgChannel1 = () => {\n    const hapticFeedbackSoft = tg.HapticFeedback.impactOccurred(\"soft\");\n    if (levelTgChannel1 === 1) {\n      alert(\"You have already completed this task ✅\");\n    } else {\n      //тут должна быть проверка\n      if (false) {\n        //здесь вместо false должен быть вывод проверки\n        setCount(count + 20000);\n        setLevelTgChannel1(levelTgChannel1 + 1);\n        alert(\"You are subscribed to the channel! ✅\");\n      } else {\n        if (\n          window.confirm(\n            \"If you subscribe to the TG channel, you get +10,000 coins. To execute?\"\n          )\n        ) {\n          tg.openTelegramLink(\"https://t.me/deanon_team_blog\");\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {loading ? (\n        <div className=\"Loading-page\">\n          <h1 className=\"title\">\n            Welcome\n            <br />\n            Quack Coin!\n          </h1>\n          <img\n            className=\"loading-wheel\"\n            src=\"https://printhiegprog.github.io/loading-wheel.png\"\n            alt=\"loading-wheel\"\n          />\n          <div className=\"contact\"></div>\n        </div>\n      ) : (\n        <Router>\n          <Routes>\n            <Route\n              exact\n              path=\"/\"\n              element={\n                <Main\n                  count={count}\n                  handleClick={handleClick}\n                  countTrue={countTrue}\n                  canClick={canClick}\n                />\n              }\n            />\n            <Route\n              path=\"/boost\"\n              element={\n                <Boost\n                  count={count}\n                  moreClicks={moreClicks}\n                  priceMoreClicks={priceMoreClicks}\n                  levelMoreClicks={levelMoreClicks}\n                  moreEnergy={moreEnergy}\n                  priceMoreEnergy={priceMoreEnergy}\n                  levelMoreEnergy={levelMoreEnergy}\n                  MoreCountTrueBonus={MoreCountTrueBonus}\n                  levelMoreCountTrueBonus={levelMoreCountTrueBonus}\n                  priceMoreCountTrueBonus={priceMoreCountTrueBonus}\n                />\n              }\n            />\n            <Route\n              path=\"/task\"\n              element={\n                <Task\n                  JoinGame={JoinGame}\n                  TgPremium={TgPremium}\n                  TgChannel1={TgChannel1}\n                />\n              }\n            />\n            <Route\n              path=\"/monopoly\"\n              element={\n                <Monopoly\n                  FactoryShoes={FactoryShoes}\n                  priceFactoryShoes={priceFactoryShoes}\n                  levelFactoryShoes={levelFactoryShoes}\n                  FactoryHotel={FactoryHotel}\n                  priceFactoryHotel={priceFactoryHotel}\n                  levelFactoryHotel={levelFactoryHotel}\n                  FactoryBank={FactoryBank}\n                  priceFactoryBank={priceFactoryBank}\n                  levelFactoryBank={levelFactoryBank}\n                />\n              }\n            />\n            <Route\n              path=\"/monopoly/market-factory\"\n              element={\n                <MarketFactory\n                  FactoryBank={FactoryBank}\n                  priceFactoryBank={priceFactoryBank}\n                  levelFactoryBank={levelFactoryBank}\n                />\n              }\n            />\n            <Route\n              path=\"/monopoly/market-powerstation\"\n              element={\n                <MarketPowerStation\n                  FactoryShoes={FactoryShoes}\n                  priceFactoryShoes={priceFactoryShoes}\n                  levelFactoryShoes={levelFactoryShoes}\n                />\n              }\n            />\n            <Route\n              path=\"/monopoly/market-hotel\"\n              element={\n                <MarketHotel\n                  FactoryHotel={FactoryHotel}\n                  priceFactoryHotel={priceFactoryHotel}\n                  levelFactoryHotel={levelFactoryHotel}\n                />\n              }\n              />\n              \n          </Routes>\n          <NavBar />\n        </Router>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}