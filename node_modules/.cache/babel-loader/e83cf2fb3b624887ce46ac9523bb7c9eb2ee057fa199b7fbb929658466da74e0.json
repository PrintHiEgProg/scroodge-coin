{"ast":null,"code":"var _jsxFileName = \"/Users/egorkobzev/scroodge coin/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DINOSAUR_WIDTH = 40;\nconst DINOSAUR_HEIGHT = 40;\nconst OBSTACLE_WIDTH = 20;\nconst OBSTACLE_HEIGHT = 20;\nconst GAME_SPEED = 100; // скорость игры\n\nfunction Dinosaur() {\n  _s();\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n  const [obstacles, setObstacles] = useState([]);\n  const [score, setScore] = useState(0);\n  const [isGameOver, setIsGameOver] = useState(false);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      updateGame();\n    }, GAME_SPEED);\n    return () => clearInterval(intervalId);\n  }, []);\n  const updateGame = () => {\n    // обновляем позицию динозавра\n    setX(x + 1);\n\n    // генерируем препятствия\n    if (Math.random() < 0.1) {\n      const obstacleX = x + DINOSAUR_WIDTH;\n      const obstacleY = Math.random() * (window.innerHeight - OBSTACLE_HEIGHT);\n      setObstacles([...obstacles, {\n        x: obstacleX,\n        y: obstacleY\n      }]);\n    }\n\n    // проверяем столкновения с препятствиями\n    obstacles.forEach(obstacle => {\n      if (x + DINOSAUR_WIDTH > obstacle.x && x < obstacle.x + OBSTACLE_WIDTH && y + DINOSAUR_HEIGHT > obstacle.y && y < obstacle.y + OBSTACLE_HEIGHT) {\n        setIsGameOver(true);\n      }\n    });\n\n    // обновляем счет\n    setScore(score + 1);\n  };\n  const handleJump = () => {\n    setY(y - 20);\n  };\n  const handleKeyDown = event => {\n    if (event.key === \" \") {\n      handleJump();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100vh\",\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: x,\n        top: y,\n        width: DINOSAUR_WIDTH,\n        height: DINOSAUR_HEIGHT,\n        backgroundColor: \"green\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), obstacles.map((obstacle, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: obstacle.x,\n        top: obstacle.y,\n        width: OBSTACLE_WIDTH,\n        height: OBSTACLE_HEIGHT,\n        backgroundColor: \"red\"\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        fontSize: 24,\n        fontWeight: \"bold\",\n        color: \"black\"\n      },\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: \"100%\",\n        height: \"100vh\",\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: 48,\n        fontWeight: \"bold\",\n        color: \"white\"\n      },\n      children: \"Game Over!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Dinosaur, \"A9e4K2HnBOXUWwoGqoSbryPZry0=\");\n_c = Dinosaur;\nexport default Dinosaur;\nvar _c;\n$RefreshReg$(_c, \"Dinosaur\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DINOSAUR_WIDTH","DINOSAUR_HEIGHT","OBSTACLE_WIDTH","OBSTACLE_HEIGHT","GAME_SPEED","Dinosaur","_s","x","setX","y","setY","obstacles","setObstacles","score","setScore","isGameOver","setIsGameOver","intervalId","setInterval","updateGame","clearInterval","Math","random","obstacleX","obstacleY","window","innerHeight","forEach","obstacle","handleJump","handleKeyDown","event","key","style","position","width","height","overflow","children","left","top","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","map","index","fontSize","fontWeight","color","display","justifyContent","alignItems","_c","$RefreshReg$"],"sources":["/Users/egorkobzev/scroodge coin/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst DINOSAUR_WIDTH = 40;\nconst DINOSAUR_HEIGHT = 40;\nconst OBSTACLE_WIDTH = 20;\nconst OBSTACLE_HEIGHT = 20;\nconst GAME_SPEED = 100; // скорость игры\n\nfunction Dinosaur() {\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n  const [obstacles, setObstacles] = useState([]);\n  const [score, setScore] = useState(0);\n  const [isGameOver, setIsGameOver] = useState(false);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      updateGame();\n    }, GAME_SPEED);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const updateGame = () => {\n    // обновляем позицию динозавра\n    setX(x + 1);\n\n    // генерируем препятствия\n    if (Math.random() < 0.1) {\n      const obstacleX = x + DINOSAUR_WIDTH;\n      const obstacleY = Math.random() * (window.innerHeight - OBSTACLE_HEIGHT);\n      setObstacles([...obstacles, { x: obstacleX, y: obstacleY }]);\n    }\n\n    // проверяем столкновения с препятствиями\n    obstacles.forEach((obstacle) => {\n      if (\n        x + DINOSAUR_WIDTH > obstacle.x &&\n        x < obstacle.x + OBSTACLE_WIDTH &&\n        y + DINOSAUR_HEIGHT > obstacle.y &&\n        y < obstacle.y + OBSTACLE_HEIGHT\n      ) {\n        setIsGameOver(true);\n      }\n    });\n\n    // обновляем счет\n    setScore(score + 1);\n  };\n\n  const handleJump = () => {\n    setY(y - 20);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === \" \") {\n      handleJump();\n    }\n  };\n\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        width: \"100%\",\n        height: \"100vh\",\n        overflow: \"hidden\",\n      }}\n    >\n      <div\n        style={{\n          position: \"absolute\",\n          left: x,\n          top: y,\n          width: DINOSAUR_WIDTH,\n          height: DINOSAUR_HEIGHT,\n          backgroundColor: \"green\",\n        }}\n      />\n      {obstacles.map((obstacle, index) => (\n        <div\n          key={index}\n          style={{\n            position: \"absolute\",\n            left: obstacle.x,\n            top: obstacle.y,\n            width: OBSTACLE_WIDTH,\n            height: OBSTACLE_HEIGHT,\n            backgroundColor: \"red\",\n          }}\n        />\n      ))}\n      <div\n        style={{\n          position: \"absolute\",\n          left: 0,\n          top: 0,\n          fontSize: 24,\n          fontWeight: \"bold\",\n          color: \"black\",\n        }}\n      >\n        Score: {score}\n      </div>\n      {isGameOver && (\n        <div\n          style={{\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            width: \"100%\",\n            height: \"100vh\",\n            backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            fontSize: 48,\n            fontWeight: \"bold\",\n            color: \"white\",\n          }}\n        >\n          Game Over!\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Dinosaur;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}